description: Release a npm module. Publish to npm registry, tagging and create release on GitHub, if version bumped up.

parameters:
  executor:
    description: executor to use for this job
    type: executor
    default: default
  checkout:
    description: >
      Boolean for whether or not to checkout as a first step. Default is true.
    type: boolean
    default: true
  attach-workspace:
    description: >
      Boolean for whether or not to attach to an existing workspace. Default
      is false.
    type: boolean
    default: false
  npm-token:
    description: >
      Your npm auth token, defaults to $NPM_AUTH_TOKEN
    type: env_var_name
    default: NPM_AUTH_TOKEN
  persist-to-workspace:
    description: >
      Boolean for whether or not to persist to a workspace. Default
      is false.
    type: boolean
    default: false
  workspace-root:
    description: >
      Workspace root path that is either an absolute path or a path relative
      to the working directory. Defaults to '~/repo'
    type: string
    default: ~/repo
  flags:
    description: Flags for `npm publish`
    type: string
    default: ""
  tagging:
    description: >
      Boolean for whether or not to tagging and push to GitHub. Default
      is false.
    type: boolean
    default: false
  ssh-fingerprints:
    type: string
    default: ""
    description: >
      Fingerprints for SSH deploy key (add the public key as a read/write
      key on GitHub; add the private key in CircleCI via SSH Permissions,
      with github.com as Hostname). Used to push a git tag back to the
      project's repository.

executor: << parameters.executor >>

steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout
  - when:
      condition: << parameters.attach-workspace >>
      steps:
        - attach_workspace:
            at: << parameters.workspace-root >>
  - run:
      name: Authenticate with registry
      command: echo "//registry.npmjs.org/:_authToken=${<< parameters.npm-token >>}" >> ~/.npmrc
  - when:
      condition: << parameters.tagging >>
      steps:
        - add_ssh_keys:
            fingerprints:
              - << parameters.ssh-fingerprints >>
  - run:
      name: Publish a npm module if version bumped up
      command: |
        version=$(node -p "require('./package.json').version")
        if [[ $(npm_config_yes=true npx semver@7 "${version}") == "" ]]; then
          echo "\`${version}\` is not a semver."
          exit 0
        fi

        if npm_config_yes=true npx can-npm-publish@1 --verbose; then
          npm publish << parameters.flags >>

          <<# parameters.tagging >>
          git config --global user.email "${CIRCLE_USERNAME}@users.noreply.github.com"
          git config --global user.name "${CIRCLE_USERNAME}"

          tag="v${version}"
          git tag -a "${tag}" -m "Release ${tag}"
          git push origin "${tag}"
          <</ parameters.tagging >>
        else
          echo 'publish skipped.'
        fi
  - when:
      condition: << parameters.persist-to-workspace >>
      steps:
        - persist_to_workspace:
            root: << parameters.workspace-root >>
            paths:
              - .
