description: >
  Install npm modules

parameters:
  restore-cache:
    description: "restore_cache"
    type: boolean
    default: true
  production:
    description: "with --production"
    type: boolean
    default: false
  save-cache:
    description: "save_cache"
    type: boolean
    default: true
  cache-key:
    description: "custom cache key"
    type: string
    default: 'cache-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}'
  yarn:
    description: "Use yarn instead of npm"
    type: boolean
    default: false
  cache-dir:
    description: "cache directory"
    type: string
    default: '~/.node-packages-cache'

steps:
  - when:
      condition: << parameters.restore-cache >>
      steps:
        - restore_cache:
            name: Restore cache
            keys:
              - << parameters.cache-key >>
  - when:
      condition: << parameters.yarn >>
      steps:
        - run:
            name: Configure cache directory
            command: yarn config set cache-folder << parameters.cache-dir >>
        - run:
            name: Yarn install
            command: yarn install --frozen-lockfile <<# parameters.production >>--prod<</ parameters.production >>
  - unless:
      condition: << parameters.yarn >>
      steps:
        - run:
            name: Configure cache directory
            command: npm config set cache << parameters.cache-dir >> --global
        - run:
            name: npm ci
            command: npm ci <<# parameters.production >>--production<</ parameters.production >>
  - when:
      condition: << parameters.save-cache >>
      steps:
        - save_cache:
            name: Save packages cache
            key: << parameters.cache-key >>
            paths:
              - << parameters.cache-dir >>
